#transpose(배열 전치)
#.T 행/열을 뒤집는다
import numpy as np
arr = np.arange(15).reshape((3, 5))
print(arr)
# [[ 0  1  2  3  4]
#  [ 5  6  7  8  9]
#  [10 11 12 13 14]]
print(arr.T)
# [[ 0  5 10]
#  [ 1  6 11]
#  [ 2  7 12]
#  [ 3  8 13]
#  [ 4  9 14]]
arr2 = np.array([[0, 1, 0], [1, 2, -2], [6, 3, 2], [-1, 0, -1], [1, 0, 1]])
print(arr2)
# [[ 0  1  0]
#  [ 1  2 -2]
#  [ 6  3  2]
#  [-1  0 -1]
#  [ 1  0  1]]
print(arr2.T)
# [[ 0  1  6 -1  1]
#  [ 1  2  3  0  0]
#  [ 0 -2  2 -1  1]]

#np.dot: 내적(dot product) 구하기
#두 벡터의 각 대응하는 성분을 곱한 후 그 결과를 모두 더하는 연산
# 예를 들어, 두 벡터 A = [a₁, a₂, ..., aₙ]과 B = [b₁, b₂, ..., bₙ]의 내적은 다음과 같이 계산됩니다:
# A·B = a₁×b₁ + a₂×b₂ + ... + aₙ×bₙ
print(np.dot(arr2.T, arr2)) #또는 arr.T @ arr 결과 동일
# [[39 20 12]
#  [20 14  2]
#  [12  2 10]]

#swapaxes: transpose와 동일하지만 축 번호 이용
#축 번호: 0-행, 1-열, 2-깊이
print(arr2.swapaxes(0,1)) #행, 열 바꾸기
# [[ 0  1  6 -1  1]
#  [ 1  2  3  0  0]
#  [ 0 -2  2 -1  1]]